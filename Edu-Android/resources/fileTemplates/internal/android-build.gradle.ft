buildscript {
  ext.kotlin_version = '${KOTLIN_VERSION}'
  repositories {
    google()
    jcenter()
    #if(${NEED_KOTLIN_EAP_REPOSITORY})maven { url 'http://dl.bintray.com/kotlin/kotlin-eap' }#end

  }
  dependencies {
    classpath 'com.android.tools.build:gradle:${ANDROID_GRADLE_PLUGIN_VERSION}'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

allprojects {
  repositories {
    google()
    jcenter()
    #if(${NEED_KOTLIN_EAP_REPOSITORY})maven { url 'http://dl.bintray.com/kotlin/kotlin-eap' }#end

  }
  afterEvaluate {
    if (extensions.findByName("android") != null) {
      android {
        testOptions {
          unitTests {
            includeAndroidResources = true
            all {
              afterTest { TestDescriptor test, TestResult result ->
                if (result.resultType == TestResult.ResultType.FAILURE) {
                  def message = result.exception?.message ?: "Wrong answer"
                  def lines = message.readLines()
                  println "#educational_plugin FAILED + " + lines[0]
                  lines[1..-1].forEach { line ->
                    println "#educational_plugin" + line
                  }
                  // we need this to separate output of different tests
                  println
                }
              }
            }
          }
        }
      }
    }
  }
}

task clean(type: Delete) {
  delete rootProject.buildDir
}

task wrapper(type: Wrapper) {
  gradleVersion = '${GRADLE_VERSION}'
}
